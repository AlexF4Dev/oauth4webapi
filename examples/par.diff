diff --git a/examples/code.ts b/examples/par.ts
index 66a88e8..26b6aef 100644
--- a/examples/code.ts
+++ b/examples/par.ts
@@ -18,6 +18,35 @@ const code_verifier = lib.generateRandomCodeVerifier()
 const code_challenge = await lib.calculatePKCECodeChallenge(code_verifier)
 const code_challenge_method = 'S256'
 
+let request_uri: string
+{
+  const parameters = new URLSearchParams()
+  parameters.set('client_id', client.client_id)
+  parameters.set('code_challenge', code_challenge)
+  parameters.set('code_challenge_method', code_challenge_method)
+  parameters.set('redirect_uri', redirect_uri)
+  parameters.set('response_type', 'code')
+  parameters.set('scope', 'openid email')
+
+  const response = await lib.pushedAuthorizationRequest(as, client, parameters)
+  let challenges: lib.WWWAuthenticateChallenge[] | undefined
+  if ((challenges = lib.parseWwwAuthenticateChallenges(response))) {
+    for (const challenge of challenges) {
+      console.log('challenge', challenge)
+    }
+    throw new Error() // Handle www-authenticate challenges as needed
+  }
+
+  const result = await lib.processPushedAuthorizationResponse(as, client, response)
+  if (lib.isOAuth2Error(result)) {
+    console.log('error', result)
+    throw new Error() // Handle OAuth 2.0 response body error
+  }
+
+  console.log('result', result)
+  ;({ request_uri } = result)
+}
+
 {
   // redirect user to as.authorization_endpoint
 
@@ -25,11 +54,7 @@ const code_challenge_method = 'S256'
 
   const authorizationUrl = new URL(as.authorization_endpoint)
   authorizationUrl.searchParams.set('client_id', client.client_id)
-  authorizationUrl.searchParams.set('code_challenge', code_challenge)
-  authorizationUrl.searchParams.set('code_challenge_method', code_challenge_method)
-  authorizationUrl.searchParams.set('redirect_uri', redirect_uri)
-  authorizationUrl.searchParams.set('response_type', 'code')
-  authorizationUrl.searchParams.set('scope', 'openid email')
+  authorizationUrl.searchParams.set('request_uri', request_uri)
 }
 
 // one eternity later, the user lands back on the redirect_uri
